definitions:
  github_com_shampsdev_sightquest_server_pkg_domain.CompletedTaskPoint:
    properties:
      createdAt:
        type: string
      gameId:
        type: string
      photo:
        type: string
      playerId:
        type: string
      pointId:
        type: string
      score:
        type: integer
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.Coordinate:
    properties:
      lat:
        type: number
      lon:
        type: number
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.Game:
    properties:
      activePoll:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Poll'
      admin:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.User'
      completedTaskPoints:
        items:
          $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.CompletedTaskPoint'
        type: array
      createdAt:
        type: string
      finishedAt:
        type: string
      id:
        type: string
      players:
        items:
          $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
        type: array
      route:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Route'
      seed:
        type: string
      state:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.GameState'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.GameState:
    enum:
    - lobby
    - game
    - poll
    - finished
    type: string
    x-enum-varnames:
    - GameStateLobby
    - GameStateGame
    - GameStatePoll
    - GameStateFinished
  github_com_shampsdev_sightquest_server_pkg_domain.PatchUser:
    properties:
      name:
        type: string
      styles:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.UserStyles'
      username:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.Payment:
    properties:
      amountRoubles:
        type: integer
      confirmationUrl:
        type: string
      createdAt:
        type: string
      id:
        type: string
      itemId:
        type: string
      status:
        $ref: '#/definitions/yoopayment.Status'
      type:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PaymentType'
      userId:
        type: string
      yooKassaId:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PaymentType:
    enum:
    - route
    - style
    type: string
    x-enum-varnames:
    - PaymentTypeRoute
    - PaymentTypeStyle
  github_com_shampsdev_sightquest_server_pkg_domain.Player:
    properties:
      gameId:
        type: string
      location:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Coordinate'
      role:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PlayerRole'
      score:
        type: integer
      user:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.User'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PlayerRole:
    enum:
    - runner
    - catcher
    type: string
    x-enum-varnames:
    - PlayerRoleRunner
    - PlayerRoleCatcher
  github_com_shampsdev_sightquest_server_pkg_domain.Poll:
    properties:
      createdAt:
        type: string
      data:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollData'
      duration:
        type: integer
      finishedAt:
        type: string
      gameId:
        type: string
      id:
        type: string
      result:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollResult'
      state:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollState'
      type:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollType'
      votes:
        items:
          $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Vote'
        type: array
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollData:
    properties:
      finishGame:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollDataFinishGame'
      pause:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollDataPause'
      playerCatch:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollDataPlayerCatch'
      taskComplete:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollDataTaskComplete'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollDataFinishGame:
    properties:
      comment:
        type: string
      suggestedBy:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollDataPause:
    properties:
      duration:
        type: integer
      pausedBy:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollDataPlayerCatch:
    properties:
      catchedBy:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
      photo:
        type: string
      runner:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollDataTaskComplete:
    properties:
      photo:
        type: string
      player:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
      task:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.TaskPoint'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollResult:
    properties:
      finishGame:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollResultFinishGame'
      pause:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollResultPause'
      playerCatch:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollResultPlayerCatch'
      taskComplete:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PollResultTaskComplete'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollResultFinishGame:
    properties:
      approved:
        type: boolean
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollResultPause:
    properties:
      unpausedBy:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollResultPlayerCatch:
    properties:
      approved:
        type: boolean
      catcherReward:
        type: integer
      newRunner:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Player'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollResultTaskComplete:
    properties:
      approved:
        type: boolean
      completedTaskPoint:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.CompletedTaskPoint'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.PollState:
    enum:
    - active
    - finished
    type: string
    x-enum-varnames:
    - PollStateActive
    - PollStateFinished
  github_com_shampsdev_sightquest_server_pkg_domain.PollType:
    enum:
    - pause
    - taskComplete
    - playerCatch
    - finishGame
    type: string
    x-enum-varnames:
    - PollTypePause
    - PollTypeTaskComplete
    - PollTypePlayerCatch
    - PollTypeFinishGame
  github_com_shampsdev_sightquest_server_pkg_domain.Route:
    properties:
      bought:
        type: boolean
      description:
        type: string
      id:
        type: string
      priceRoubles:
        type: integer
      taskPoints:
        items:
          $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.TaskPoint'
        type: array
      title:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.Style:
    properties:
      bought:
        type: boolean
      id:
        type: string
      priceRoubles:
        type: integer
      style: {}
      title:
        type: string
      type:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.StyleType'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.StyleType:
    enum:
    - avatar
    type: string
    x-enum-varnames:
    - StyleTypeAvatar
  github_com_shampsdev_sightquest_server_pkg_domain.TaskPoint:
    properties:
      description:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Coordinate'
      score:
        type: integer
      task:
        type: string
      title:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.User:
    properties:
      id:
        type: string
      name:
        type: string
      styles:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.UserStyles'
      username:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.UserCredentials:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.UserStyles:
    properties:
      avatarId:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.Vote:
    properties:
      createdAt:
        type: string
      data:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.VoteData'
      gameId:
        type: string
      playerId:
        type: string
      pollId:
        type: string
      type:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.VoteType'
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.VoteData:
    properties:
      comment:
        type: string
    type: object
  github_com_shampsdev_sightquest_server_pkg_domain.VoteType:
    enum:
    - unpause
    - taskApprove
    - taskReject
    - playerCatchApprove
    - playerCatchReject
    - finishGameApprove
    - finishGameReject
    type: string
    x-enum-varnames:
    - VoteTypeUnpause
    - VoteTypeTaskApprove
    - VoteTypeTaskReject
    - VoteTypePlayerCatchApprove
    - VoteTypePlayerCatchReject
    - VoteTypeFinishGameApprove
    - VoteTypeFinishGameReject
  pkg_gateways_rest_auth.userToken:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.User'
    type: object
  pkg_gateways_rest_image.UploadResponse:
    properties:
      url:
        type: string
    type: object
  pkg_gateways_rest_payment.BuyRouteRequest:
    properties:
      returnUrl:
        type: string
    required:
    - returnUrl
    type: object
  pkg_gateways_rest_payment.BuyStyleRequest:
    properties:
      returnUrl:
        type: string
    required:
    - returnUrl
    type: object
  pkg_gateways_rest_style.setAvatarRequest:
    properties:
      styleId:
        type: string
    type: object
  yoopayment.Status:
    enum:
    - pending
    - waiting_for_capture
    - succeeded
    - canceled
    type: string
    x-enum-varnames:
    - Pending
    - WaitingForCapture
    - Succeeded
    - Canceled
  yoowebhook.WebhookEvent:
    type: object
  yoowebhook.WebhookEventType:
    enum:
    - payment.succeeded
    - payment.waiting_for_capture
    - payment.canceled
    - refund.succeeded
    - payout.succeeded
    - payout.canceled
    type: string
    x-enum-varnames:
    - EventPaymentSucceeded
    - EventPaymentWaitingForCapture
    - EventPaymentCanceled
    - EventRefundSucceeded
    - EventPayoutSucceeded
    - EventPayoutCanceled
  yoowebhook.WebhookType:
    enum:
    - notification
    type: string
    x-enum-varnames:
    - WebhookTypeNotification
info:
  contact: {}
  title: Sightquest server
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_gateways_rest_auth.userToken'
        "400":
          description: Bad Request
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_gateways_rest_auth.userToken'
        "400":
          description: Bad Request
      summary: Register user
      tags:
      - auth
  /game:
    post:
      consumes:
      - application/json
      parameters:
      - description: Seed for game
        in: query
        name: seed
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Game'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Create game
      tags:
      - game
  /game/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Game'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Get game by id
      tags:
      - game
  /game/latest:
    get:
      consumes:
      - application/json
      parameters:
      - description: Number of games to return
        in: query
        name: limit
        required: true
        type: integer
      - description: Game state
        enum:
        - lobby
        - game
        - poll
        - finished
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Game'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get last N games for a player
      tags:
      - game
  /images/upload/by_file:
    post:
      consumes:
      - application/json
      parameters:
      - description: Image data
        in: formData
        name: file
        required: true
        type: file
      - description: Directory in s3 storage
        in: query
        name: dir
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A url to the stored image
          schema:
            $ref: '#/definitions/pkg_gateways_rest_image.UploadResponse'
        "400":
          description: Parsing error
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Upload file to s3
      tags:
      - images
  /payment/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Payment'
            type: array
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Get user payments
      tags:
      - payment
  /payment/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Payment'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Get payment by ID
      tags:
      - payment
  /payment/route/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Route ID
        in: path
        name: id
        required: true
        type: string
      - description: Buy route request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_gateways_rest_payment.BuyRouteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Payment'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Buy route with payment
      tags:
      - payment
  /payment/style/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Style ID
        in: path
        name: id
        required: true
        type: string
      - description: Buy style request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_gateways_rest_payment.BuyStyleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Payment'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Buy style with payment
      tags:
      - payment
  /route:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Route'
            type: array
        "400":
          description: Bad Request
      summary: Get all routes
      tags:
      - route
  /route/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Route ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Route'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Get route by ID
      tags:
      - route
  /styles:
    get:
      consumes:
      - application/json
      parameters:
      - description: Style type filter
        in: query
        name: type
        type: string
      - description: Bought filter
        in: query
        name: bought
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.Style'
            type: array
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Get available styles
      tags:
      - style
  /styles/me/avatar:
    post:
      consumes:
      - application/json
      parameters:
      - description: Style ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pkg_gateways_rest_style.setAvatarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.User'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Set avatar style
      tags:
      - style
  /user/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.User'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Get me
      tags:
      - user
    patch:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.PatchUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_shampsdev_sightquest_server_pkg_domain.User'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      summary: Patch me
      tags:
      - user
  /webhook/yookassa:
    post:
      consumes:
      - application/json
      parameters:
      - description: Webhook event
        in: body
        name: webhook
        required: true
        schema:
          $ref: '#/definitions/yoowebhook.WebhookEvent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: YooKassa webhook handler
      tags:
      - payment
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Token
    type: apiKey
swagger: "2.0"
